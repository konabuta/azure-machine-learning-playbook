"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1942],{3905:(e,n,t)=>{t.d(n,{Zo:()=>m,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=a.createContext({}),p=function(e){var n=a.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},m=function(e){var n=p(e.components);return a.createElement(o.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(t),d=r,f=c["".concat(o,".").concat(d)]||c[d]||u[d]||i;return t?a.createElement(f,l(l({ref:n},m),{},{components:t})):a.createElement(f,l({ref:n},m))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=c;var s={};for(var o in n)hasOwnProperty.call(n,o)&&(s[o]=n[o]);s.originalType=e,s.mdxType="string"==typeof e?e:r,l[1]=s;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3801:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={id:"train-with-cli-v2-yaml"},l="\u30e2\u30c7\u30eb\u5b66\u7fd2 (CLI v2 + YAML)",s={unversionedId:"azureml/fundamentals/samples/train-with-cli-v2-yaml",id:"azureml/fundamentals/samples/train-with-cli-v2-yaml",title:"\u30e2\u30c7\u30eb\u5b66\u7fd2 (CLI v2 + YAML)",description:"\u30b3\u30de\u30f3\u30c9",source:"@site/docs/azureml/fundamentals/samples/train-with-cli-v2-yaml.md",sourceDirName:"azureml/fundamentals/samples",slug:"/azureml/fundamentals/samples/train-with-cli-v2-yaml",permalink:"/azure-machine-learning-playbook/docs/azureml/fundamentals/samples/train-with-cli-v2-yaml",draft:!1,editUrl:"https://github.com/konabuta/azure-machine-learning-playbook/docs/azureml/fundamentals/samples/train-with-cli-v2-yaml.md",tags:[],version:"current",frontMatter:{id:"train-with-cli-v2-yaml"},sidebar:"azuremlSidebar",previous:{title:"\u30b5\u30f3\u30d7\u30eb",permalink:"/azure-machine-learning-playbook/docs/category/\u30b5\u30f3\u30d7\u30eb"},next:{title:"\u8a08\u7b97\u30ea\u30bd\u30fc\u30b9\u306e\u9078\u629e",permalink:"/azure-machine-learning-playbook/docs/azureml/platform/azureml-compute"}},o={},p=[{value:"\u30b3\u30de\u30f3\u30c9",id:"\u30b3\u30de\u30f3\u30c9",level:2},{value:"\u30b3\u30fc\u30c9",id:"\u30b3\u30fc\u30c9",level:2},{value:"YAML",id:"yaml",level:3},{value:"Python",id:"python",level:3},{value:"\u53c2\u8003\u60c5\u5831",id:"\u53c2\u8003\u60c5\u5831",level:2}],m={toc:p};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u30e2\u30c7\u30eb\u5b66\u7fd2-cli-v2--yaml"},"\u30e2\u30c7\u30eb\u5b66\u7fd2 (CLI v2 + YAML)"),(0,r.kt)("h2",{id:"\u30b3\u30de\u30f3\u30c9"},"\u30b3\u30de\u30f3\u30c9"),(0,r.kt)("p",null,"Azure ML CLI v2 \u3092\u5229\u7528\u3057\u307e\u3059\u3002\u4e88\u3081\u4f5c\u6210\u3057\u305f YAML \u30d5\u30a1\u30a4\u30eb\u3092\u5f15\u6570\u306b\u3057\u3066\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3057\u307e\u3059\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"az ml job create --file train-model.yml\n")),(0,r.kt)("h2",{id:"\u30b3\u30fc\u30c9"},"\u30b3\u30fc\u30c9"),(0,r.kt)("h3",{id:"yaml"},"YAML"),(0,r.kt)("p",null,"\u5b9f\u9a13\u306e\u8a2d\u5b9a\u3092 YAML \u30d5\u30a1\u30a4\u30eb\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"train-model.yml")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"$schema: https://azuremlschemas.azureedge.net/latest/commandJob.schema.json\ncode: model\ncommand: >-\n  python train.py --reg_rate ${{inputs.reg_rate}} --training_data ${{inputs.training_data}}\ninputs:\n  training_data:\n    type: uri_folder\n    path: azureml:diabetes-folder@latest\n  reg_rate: 0.01\nenvironment: azureml:AzureML-sklearn-0.24-ubuntu18.04-py37-cpu@latest\ncompute: azureml:cpu-cluster\nexperiment_name: train-model\ndescription: train model using Logistic Regressions\n")),(0,r.kt)("h3",{id:"python"},"Python"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"model")," \u30d5\u30a9\u30eb\u30c0\u914d\u4e0b\u306b 2 \u3064\u306e Python \u30b9\u30af\u30ea\u30d7\u30c8 ",(0,r.kt)("inlineCode",{parentName:"p"},"train.py"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"helper.py")," \u304c\u3042\u308b\u60f3\u5b9a\u3067\u3059\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"train.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import argparse\n\nimport mlflow\nfrom helper import get_csvs_df\nfrom sklearn.linear_model import LogisticRegression\nfrom sklearn.model_selection import train_test_split\n\n\n# define functions\ndef main(args):\n    # TO DO: enable autologging\n    mlflow.autolog()\n\n    # read data\n    df = get_csvs_df(args.training_data)\n\n    # split data\n    X_train, X_test, y_train, y_test = split_data(df)\n\n    # train model\n    train_model(args.reg_rate, X_train, X_test, y_train, y_test)\n\n\n# split data\ndef split_data(df):\n    X, y = (\n        df[\n            [\n                "Pregnancies",\n                "PlasmaGlucose",\n                "DiastolicBloodPressure",\n                "TricepsThickness",\n                "SerumInsulin",\n                "BMI",\n                "DiabetesPedigree",\n                "Age",\n            ]\n        ].values,\n        df["Diabetic"].values,\n    )\n    return train_test_split(X, y, test_size=0.30, random_state=0)\n\n\ndef train_model(reg_rate, X_train, X_test, y_train, y_test):\n    # train model\n    LogisticRegression(C=1 / reg_rate, solver="liblinear").fit(X_train, y_train)\n\n\ndef parse_args():\n    # setup arg parser\n    parser = argparse.ArgumentParser()\n\n    # add arguments\n    parser.add_argument("--training_data", dest="training_data", type=str)\n    parser.add_argument("--reg_rate", dest="reg_rate", type=float, default=0.01)\n\n    # parse args\n    args = parser.parse_args()\n\n    # return args\n    return args\n\n\n# run script\nif __name__ == "__main__":\n    # add space in logs\n    print("\\n\\n")\n    print("*" * 60)\n\n    # parse args\n    args = parse_args()\n\n    # run main function\n    main(args)\n\n    # add space in logs\n    print("*" * 60)\n    print("\\n\\n")\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"helper.py")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},'import glob\nimport os\n\nimport pandas as pd\n\n\ndef get_csvs_df(path):\n    if not os.path.exists(path):\n        raise RuntimeError(f"Cannot use non-existent path provided: {path}")\n    csv_files = glob.glob(f"{path}/*.csv")\n    if not csv_files:\n        raise RuntimeError(f"No CSV files found in provided data path: {path}")\n    return pd.concat((pd.read_csv(f) for f in csv_files), sort=False)\n')),(0,r.kt)("h2",{id:"\u53c2\u8003\u60c5\u5831"},"\u53c2\u8003\u60c5\u5831"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/ja-JP/azure/machine-learning/how-to-configure-cli?tabs=public"},"CLI (v2) \u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u8a2d\u5b9a")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://docs.microsoft.com/ja-jp/azure/machine-learning/how-to-train-cli"},"CLI (v2) \u3092\u4f7f\u7528\u3057\u305f\u30e2\u30c7\u30eb\u3092\u30c8\u30ec\u30fc\u30cb\u30f3\u30b0\u3059\u308b")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://github.com/Azure/azureml-examples"},"Azure Machine Learning examples"))))}u.isMDXComponent=!0}}]);